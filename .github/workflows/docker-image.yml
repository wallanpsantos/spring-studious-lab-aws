name: Docker Image CI/CD

on:
  push:
    branches: [ "main" ]
    tags: # Executa o workflow ao bater uma tag
      - 'v*'  # Assumindo que as tags seguem o formato "vX.X.X"
  release:
    types: [ published ] # Executa o workflow ao publicar uma nova release

jobs:
  login:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4  # Faz o checkout do código

      # Configura o Docker para autenticação
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Definindo o nome da imagem com base no repositório e tag SHA do commit ou tag de release
      - name: Build the Docker image
        run: |
          if [ "${{ github.event_name }}" == "push" ] && [ "${{ github.ref_type }}" == "tag" ]; then
            IMAGE_NAME=${{ github.repository }}:${{ github.ref_name }}
          elif [ "${{ github.event_name }}" == "release" ]; then
            IMAGE_NAME=${{ github.repository }}:${{ github.event.release.tag_name }}
          else
            IMAGE_NAME=${{ github.repository }}:$(echo $GITHUB_SHA | head -c7)
          fi
          docker build . --file Dockerfile --tag $IMAGE_NAME

      # Faz o push para o Docker Hub ou outro registry
      - name: Push the Docker image
        run: |
          docker push $IMAGE_NAME

      # Adiciona uma tag "latest" para builds na branch "main" e faz o push da imagem
      - name: Tag image as latest
        if: github.ref == 'refs/heads/main'  # Executa esta etapa apenas na branch "main"
        run: |
          IMAGE_NAME=${{ github.repository }}:latest
          docker tag $IMAGE_NAME
          docker push $IMAGE_NAME
