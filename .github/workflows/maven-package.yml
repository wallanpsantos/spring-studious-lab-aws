name: Maven Package

on:
  release:
    types: [ created ]
  push:
    branches: [ main ]
  schedule:
    - cron: '0 5 * * 1'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and test with Maven
        run: mvn -B clean test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/surefire-reports/

  deploy:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write  # Necessário para publicar pacotes no GitHub Packages

    steps:
      - uses: actions/checkout@v4  # Faz o checkout do código
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'  # Altere para a versão do Java que seu projeto usa (ex: '17', '21')
          distribution: 'temurin'  # Define a distribuição do JDK
          cache: maven # Armazene em cache as dependências do Maven para acelerar execuções subsequentes do workflow
          server-id: github  # Esse id deve coincidir com o <id> definido no pom.xml
          settings-path: ${{ github.workspace }}/.github  # O caminho do settings.xml

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B package --file pom.xml  # Compila o projeto

      - name: Publish to GitHub Packages Apache Maven
        run: mvn deploy -DskipTests -DskipRemoteStaging=true -s $GITHUB_WORKSPACE/.github/settings.xml # Faz o deploy do pacote para o GitHub Packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Usa o token gerado automaticamente pelo GitHub Actions

      # Notificação no Slack (opcional - descomente para usar)
      # - name: Notify on Failure
      #   if: failure()
      #   uses: rtCamp/action-slack-notify@v2
      #   with:
      #     webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
      #     message: "❗ O workflow Maven falhou no repositório ${{ github.repository }} no job de deploy."
      #     username: "GitHub Actions Bot"
      #     icon_emoji: ":warning:"
      #     color: "#FF0000"

      - name: Clean up
        if: always()
        run: mvn clean